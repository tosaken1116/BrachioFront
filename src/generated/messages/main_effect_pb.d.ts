// @generated by protoc-gen-es v2.0.0
// @generated from file messages/main_effect.proto (package messages.main_effect, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file messages/main_effect.proto.
 */
export declare const file_messages_main_effect: GenFile;

/**
 * @generated from message messages.main_effect.MainEffect
 */
export declare type MainEffect = Message<"messages.main_effect.MainEffect"> & {
  /**
   * @generated from oneof messages.main_effect.MainEffect.main_effect
   */
  mainEffect: {
    /**
     * 反動ダメージ
     *
     * @generated from field: messages.main_effect.Recoil recoil = 1;
     */
    value: Recoil;
    case: "recoil";
  } | {
    /**
     * 回復
     *
     * @generated from field: messages.main_effect.Heal heal = 2;
     */
    value: Heal;
    case: "heal";
  } | {
    /**
     * 全体回復
     *
     * @generated from field: messages.main_effect.HealAll heal_all = 3;
     */
    value: HealAll;
    case: "healAll";
  } | {
    /**
     * 交換
     *
     * @generated from field: messages.main_effect.Swap swap = 4;
     */
    value: Swap;
    case: "swap";
  } | {
    /**
     * ドロー
     *
     * @generated from field: messages.main_effect.Draw draw = 5;
     */
    value: Draw;
    case: "draw";
  } | {
    /**
     * 手札からトラッシュ
     *
     * @generated from field: messages.main_effect.DiscardFromHand discard_from_hand = 6;
     */
    value: DiscardFromHand;
    case: "discardFromHand";
  } | {
    /**
     * デッキからトラッシュ
     *
     * @generated from field: messages.main_effect.DiscardFromDeck discard_from_deck = 7;
     */
    value: DiscardFromDeck;
    case: "discardFromDeck";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message messages.main_effect.MainEffect.
 * Use `create(MainEffectSchema)` to create a new message.
 */
export declare const MainEffectSchema: GenMessage<MainEffect>;

/**
 * 反動ダメージ
 *
 * @generated from message messages.main_effect.Recoil
 */
export declare type Recoil = Message<"messages.main_effect.Recoil"> & {
  /**
   * @generated from field: int32 amount = 1;
   */
  amount: number;
};

/**
 * Describes the message messages.main_effect.Recoil.
 * Use `create(RecoilSchema)` to create a new message.
 */
export declare const RecoilSchema: GenMessage<Recoil>;

/**
 * 回復
 *
 * @generated from message messages.main_effect.Heal
 */
export declare type Heal = Message<"messages.main_effect.Heal"> & {
  /**
   * @generated from field: int32 amount = 1;
   */
  amount: number;

  /**
   * @generated from field: string target = 2;
   */
  target: string;
};

/**
 * Describes the message messages.main_effect.Heal.
 * Use `create(HealSchema)` to create a new message.
 */
export declare const HealSchema: GenMessage<Heal>;

/**
 * 全体回復
 *
 * @generated from message messages.main_effect.HealAll
 */
export declare type HealAll = Message<"messages.main_effect.HealAll"> & {
  /**
   * @generated from field: int32 amount = 1;
   */
  amount: number;
};

/**
 * Describes the message messages.main_effect.HealAll.
 * Use `create(HealAllSchema)` to create a new message.
 */
export declare const HealAllSchema: GenMessage<HealAll>;

/**
 * 交換
 *
 * @generated from message messages.main_effect.Swap
 */
export declare type Swap = Message<"messages.main_effect.Swap"> & {
  /**
   * @generated from field: string target = 1;
   */
  target: string;
};

/**
 * Describes the message messages.main_effect.Swap.
 * Use `create(SwapSchema)` to create a new message.
 */
export declare const SwapSchema: GenMessage<Swap>;

/**
 * ドロー
 *
 * @generated from message messages.main_effect.Draw
 */
export declare type Draw = Message<"messages.main_effect.Draw"> & {
  /**
   * @generated from field: int32 amount = 1;
   */
  amount: number;
};

/**
 * Describes the message messages.main_effect.Draw.
 * Use `create(DrawSchema)` to create a new message.
 */
export declare const DrawSchema: GenMessage<Draw>;

/**
 * 手札からトラッシュ
 *
 * @generated from message messages.main_effect.DiscardFromHand
 */
export declare type DiscardFromHand = Message<"messages.main_effect.DiscardFromHand"> & {
  /**
   * @generated from field: int32 amount = 1;
   */
  amount: number;

  /**
   * @generated from field: repeated string card_ids = 2;
   */
  cardIds: string[];
};

/**
 * Describes the message messages.main_effect.DiscardFromHand.
 * Use `create(DiscardFromHandSchema)` to create a new message.
 */
export declare const DiscardFromHandSchema: GenMessage<DiscardFromHand>;

/**
 * デッキからトラッシュ
 *
 * @generated from message messages.main_effect.DiscardFromDeck
 */
export declare type DiscardFromDeck = Message<"messages.main_effect.DiscardFromDeck"> & {
  /**
   * @generated from field: int32 amount = 1;
   */
  amount: number;
};

/**
 * Describes the message messages.main_effect.DiscardFromDeck.
 * Use `create(DiscardFromDeckSchema)` to create a new message.
 */
export declare const DiscardFromDeckSchema: GenMessage<DiscardFromDeck>;

